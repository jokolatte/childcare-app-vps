[1mdiff --git a/backend/backend/settings.py b/backend/backend/settings.py[m
[1mindex 24f9812..c31d1c0 100644[m
[1m--- a/backend/backend/settings.py[m
[1m+++ b/backend/backend/settings.py[m
[36m@@ -1,15 +1,3 @@[m
[31m-"""[m
[31m-Django settings for backend project.[m
[31m-[m
[31m-Generated by 'django-admin startproject' using Django 5.1.4.[m
[31m-[m
[31m-For more information on this file, see[m
[31m-https://docs.djangoproject.com/en/5.1/topics/settings/[m
[31m-[m
[31m-For the full list of settings and their values, see[m
[31m-https://docs.djangoproject.com/en/5.1/ref/settings/[m
[31m-"""[m
[31m-[m
 from pathlib import Path[m
 [m
 # Build paths inside the project like this: BASE_DIR / 'subdir'.[m
[36m@@ -39,6 +27,7 @@[m [mINSTALLED_APPS = [[m
     'django.contrib.staticfiles',[m
     'core',[m
     'corsheaders',[m
[32m+[m[32m    'rest_framework',  # Add this line[m
 ][m
 [m
 MIDDLEWARE = [[m
[36m@@ -133,3 +122,13 @@[m [mDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'[m
 CORS_ALLOWED_ORIGINS = [[m
     "http://localhost:5173",  # Frontend origin[m
 ][m
[32m+[m
[32m+[m[32m# Django REST Framework settings[m
[32m+[m[32mREST_FRAMEWORK = {[m
[32m+[m[32m    'DEFAULT_RENDERER_CLASSES': [[m
[32m+[m[32m        'rest_framework.renderers.JSONRenderer',  # Set JSON as the default renderer[m
[32m+[m[32m    ],[m
[32m+[m[32m    'DEFAULT_PARSER_CLASSES': [[m
[32m+[m[32m        'rest_framework.parsers.JSONParser',[m
[32m+[m[32m    ],[m
[32m+[m[32m}[m
[1mdiff --git a/backend/backend/urls.py b/backend/backend/urls.py[m
[1mindex 09885e6..20c5daf 100644[m
[1m--- a/backend/backend/urls.py[m
[1m+++ b/backend/backend/urls.py[m
[36m@@ -1,19 +1,3 @@[m
[31m-"""[m
[31m-URL configuration for backend project.[m
[31m-[m
[31m-The `urlpatterns` list routes URLs to views. For more information please see:[m
[31m-    https://docs.djangoproject.com/en/5.1/topics/http/urls/[m
[31m-Examples:[m
[31m-Function views[m
[31m-    1. Add an import:  from my_app import views[m
[31m-    2. Add a URL to urlpatterns:  path('', views.home, name='home')[m
[31m-Class-based views[m
[31m-    1. Add an import:  from other_app.views import Home[m
[31m-    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')[m
[31m-Including another URLconf[m
[31m-    1. Import the include() function: from django.urls import include, path[m
[31m-    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))[m
[31m-"""[m
 from django.contrib import admin[m
 from django.urls import path, include[m
 from django.http import JsonResponse[m
[36m@@ -23,8 +7,6 @@[m [mdef root_view(request):[m
 [m
 urlpatterns = [[m
     path('admin/', admin.site.urls),[m
[31m-    path('api/test/', include('core.urls')),  # This maps to your test API[m
[31m-    path('', root_view, name='root_view'),  # Add this line for the root URL[m
[32m+[m[32m    path('', include('core.urls')),  # Include core URLs directly without an extra prefix[m
[32m+[m[32m    path('', root_view, name='root_view'),  # Root URL response[m
 ][m
[31m-[m
[31m-[m
[1mdiff --git a/backend/childcare_app_backup.sql b/backend/childcare_app_backup.sql[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/backend/core/admin.py b/backend/core/admin.py[m
[1mindex 8c38f3f..035b4f2 100644[m
[1m--- a/backend/core/admin.py[m
[1m+++ b/backend/core/admin.py[m
[36m@@ -1,3 +1,12 @@[m
[32m+[m[32m# core/admin.py[m
 from django.contrib import admin[m
[32m+[m[32mfrom .models import Family, Child, Classroom, Attendance, Payment, Invoice, GovernmentFunding[m
 [m
[31m-# Register your models here.[m
[32m+[m[32m# Register models[m
[32m+[m[32madmin.site.register(Family)[m
[32m+[m[32madmin.site.register(Child)[m
[32m+[m[32madmin.site.register(Classroom)[m
[32m+[m[32madmin.site.register(Attendance)[m
[32m+[m[32madmin.site.register(Payment)[m
[32m+[m[32madmin.site.register(Invoice)[m
[32m+[m[32madmin.site.register(GovernmentFunding)[m
\ No newline at end of file[m
[1mdiff --git a/backend/core/migrations/0001_initial.py b/backend/core/migrations/0001_initial.py[m
[1mindex 9cbffa1..e5eb36d 100644[m
[1m--- a/backend/core/migrations/0001_initial.py[m
[1m+++ b/backend/core/migrations/0001_initial.py[m
[36m@@ -1,5 +1,6 @@[m
[31m-# Generated by Django 5.1.4 on 2024-12-31 21:59[m
[32m+[m[32m# Generated by Django 5.1.4 on 2025-01-01 08:23[m
 [m
[32m+[m[32mimport django.db.models.deletion[m
 from django.db import migrations, models[m
 [m
 [m
[36m@@ -12,11 +13,32 @@[m [mclass Migration(migrations.Migration):[m
 [m
     operations = [[m
         migrations.CreateModel([m
[31m-            name='SampleModel',[m
[32m+[m[32m            name='Family',[m
             fields=[[m
                 ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[31m-                ('name', models.CharField(max_length=100)),[m
[31m-                ('description', models.TextField()),[m
[32m+[m[32m                ('parent_1_name', models.CharField(max_length=255)),[m
[32m+[m[32m                ('parent_1_phone', models.CharField(max_length=20)),[m
[32m+[m[32m                ('parent_1_email', models.EmailField(max_length=254)),[m
[32m+[m[32m                ('parent_2_name', models.CharField(blank=True, max_length=255, null=True)),[m
[32m+[m[32m                ('parent_2_phone', models.CharField(blank=True, max_length=20, null=True)),[m
[32m+[m[32m                ('parent_2_email', models.EmailField(blank=True, max_length=254, null=True)),[m
[32m+[m[32m                ('address', models.TextField()),[m
[32m+[m[32m                ('payment_preferences', models.CharField(choices=[('EFT', 'EFT'), ('Credit Card', 'Credit Card'), ('Cash', 'Cash'), ('Cheque', 'Cheque'), ('Direct Payment', 'Direct Payment')], max_length=20)),[m
[32m+[m[32m                ('notes', models.TextField(blank=True, null=True)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Child',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('name', models.CharField(max_length=255)),[m
[32m+[m[32m                ('date_of_birth', models.DateField()),[m
[32m+[m[32m                ('allergy_info', models.TextField(blank=True, null=True)),[m
[32m+[m[32m                ('emergency_contact', models.TextField(blank=True, null=True)),[m
[32m+[m[32m                ('start_date', models.DateField()),[m
[32m+[m[32m                ('end_date', models.DateField(blank=True, null=True)),[m
[32m+[m[32m                ('notes', models.TextField(blank=True, null=True)),[m
[32m+[m[32m                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.family')),[m
             ],[m
         ),[m
     ][m
[1mdiff --git a/backend/core/migrations/0002_alter_samplemodel_name.py b/backend/core/migrations/0002_alter_samplemodel_name.py[m
[1mdeleted file mode 100644[m
[1mindex 4f8df10..0000000[m
[1m--- a/backend/core/migrations/0002_alter_samplemodel_name.py[m
[1m+++ /dev/null[m
[36m@@ -1,18 +0,0 @@[m
[31m-# Generated by Django 5.1.4 on 2024-12-31 22:10[m
[31m-[m
[31m-from django.db import migrations, models[m
[31m-[m
[31m-[m
[31m-class Migration(migrations.Migration):[m
[31m-[m
[31m-    dependencies = [[m
[31m-        ('core', '0001_initial'),[m
[31m-    ][m
[31m-[m
[31m-    operations = [[m
[31m-        migrations.AlterField([m
[31m-            model_name='samplemodel',[m
[31m-            name='name',[m
[31m-            field=models.CharField(max_length=255),[m
[31m-        ),[m
[31m-    ][m
[1mdiff --git a/backend/core/migrations/0002_attendance.py b/backend/core/migrations/0002_attendance.py[m
[1mnew file mode 100644[m
[1mindex 0000000..a70a629[m
[1m--- /dev/null[m
[1m+++ b/backend/core/migrations/0002_attendance.py[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32m# Generated by Django 5.1.4 on 2025-01-01 08:40[m
[32m+[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('core', '0001_initial'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Attendance',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('classroom_id', models.IntegerField()),[m
[32m+[m[32m                ('date', models.DateField()),[m
[32m+[m[32m                ('max_capacity', models.IntegerField()),[m
[32m+[m[32m                ('enrolled_children', models.IntegerField()),[m
[32m+[m[32m                ('notes', models.TextField(blank=True, null=True)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/backend/core/migrations/0003_classroom_delete_attendance.py b/backend/core/migrations/0003_classroom_delete_attendance.py[m
[1mnew file mode 100644[m
[1mindex 0000000..4f6cbc1[m
[1m--- /dev/null[m
[1m+++ b/backend/core/migrations/0003_classroom_delete_attendance.py[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32m# Generated by Django 5.1.4 on 2025-01-01 09:31[m
[32m+[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('core', '0002_attendance'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Classroom',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('name', models.CharField(max_length=255)),[m
[32m+[m[32m                ('capacity', models.IntegerField()),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.DeleteModel([m
[32m+[m[32m            name='Attendance',[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/backend/core/migrations/0004_attendance.py b/backend/core/migrations/0004_attendance.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e16df93[m
[1m--- /dev/null[m
[1m+++ b/backend/core/migrations/0004_attendance.py[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m# Generated by Django 5.1.4 on 2025-01-01 09:36[m
[32m+[m
[32m+[m[32mimport django.db.models.deletion[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('core', '0003_classroom_delete_attendance'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Attendance',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('date', models.DateField()),[m
[32m+[m[32m                ('max_capacity', models.IntegerField()),[m
[32m+[m[32m                ('enrolled_children', models.IntegerField()),[m
[32m+[m[32m                ('notes', models.TextField(blank=True, null=True)),[m
[32m+[m[32m                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='core.classroom')),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/backend/core/migrations/0005_payment.py b/backend/core/migrations/0005_payment.py[m
[1mnew file mode 100644[m
[1mindex 0000000..415ea10[m
[1m--- /dev/null[m
[1m+++ b/backend/core/migrations/0005_payment.py[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32m# Generated by Django 5.1.4 on 2025-01-01 09:46[m
[32m+[m
[32m+[m[32mimport django.db.models.deletion[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('core', '0004_attendance'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Payment',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('invoice_id', models.IntegerField(blank=True, null=True)),[m
[32m+[m[32m                ('receipt_id', models.CharField(blank=True, max_length=255, null=True)),[m
[32m+[m[32m                ('payment_date', models.DateField()),[m
[32m+[m[32m                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),[m
[32m+[m[32m                ('government_contribution', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),[m
[32m+[m[32m                ('payment_method', models.CharField(choices=[('EFT', 'EFT'), ('Credit Card', 'Credit Card'), ('Cash', 'Cash'), ('Cheque', 'Cheque'), ('Direct Payment', 'Direct Payment')], max_length=50)),[m
[32m+[m[32m                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('Paid', 'Paid'), ('Overdue', 'Overdue')], max_length=20)),[m
[32m+[m[32m                ('notes', models.TextField(blank=True, null=True)),[m
[32m+[m[32m                ('child', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.child')),[m
[32m+[m[32m                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.family')),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/backend/core/migrations/0006_remove_payment_government_contribution_and_more.py b/backend/core/migrations/0006_remove_payment_government_contribution_and_more.py[m
[1mnew file mode 100644[m
[1mindex 0000000..2f2adfd[m
[1m--- /dev/null[m
[1m+++ b/backend/core/migrations/0006_remove_payment_government_contribution_and_more.py[m
[36m@@ -0,0 +1,60 @@[m
[32m+[m[32m# Generated by Django 5.1.4 on 2025-01-01 10:07[m
[32m+[m
[32m+[m[32mimport django.db.models.deletion[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('core', '0005_payment'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.RemoveField([m
[32m+[m[32m            model_name='payment',[m
[32m+[m[32m            name='government_contribution',[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.RemoveField([m
[32m+[m[32m            model_name='payment',[m
[32m+[m[32m            name='invoice_id',[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.RemoveField([m
[32m+[m[32m            model_name='payment',[m
[32m+[m[32m            name='payment_method',[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.RemoveField([m
[32m+[m[32m            model_name='payment',[m
[32m+[m[32m            name='payment_status',[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.RemoveField([m
[32m+[m[32m            model_name='payment',[m
[32m+[m[32m            name='receipt_id',[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.AddField([m
[32m+[m[32m            model_name='payment',[m
[32m+[m[32m            name='method',[m
[32m+[m[32m            field=models.CharField(choices=[('EFT', 'EFT'), ('Credit Card', 'Credit Card'), ('Cash', 'Cash'), ('Cheque', 'Cheque'), ('Direct Payment', 'Direct Payment')], default=0.0, max_length=20),[m
[32m+[m[32m            preserve_default=False,[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.AlterField([m
[32m+[m[32m            model_name='payment',[m
[32m+[m[32m            name='amount_paid',[m
[32m+[m[32m            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Invoice',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('date_issued', models.DateField()),[m
[32m+[m[32m                ('due_date', models.DateField()),[m
[32m+[m[32m                ('due_amount', models.DecimalField(decimal_places=2, max_digits=10)),[m
[32m+[m[32m                ('subsidy_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),[m
[32m+[m[32m                ('paid_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),[m
[32m+[m[32m                ('payment_status', models.CharField(choices=[('Paid', 'Paid'), ('Unpaid', 'Unpaid'), ('Partially Paid', 'Partially Paid')], default='Unpaid', max_length=20)),[m
[32m+[m[32m                ('notes', models.TextField(blank=True, null=True)),[m
[32m+[m[32m                ('child', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='core.child')),[m
[32m+[m[32m                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='core.family')),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/backend/core/migrations/0007_governmentfunding.py b/backend/core/migrations/0007_governmentfunding.py[m
[1mnew file mode 100644[m
[1mindex 0000000..75bc7ba[m
[1m--- /dev/null[m
[1m+++ b/backend/core/migrations/0007_governmentfunding.py[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m# Generated by Django 5.1.4 on 2025-01-01 10:12[m
[32m+[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('core', '0006_remove_payment_government_contribution_and_more'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='GovernmentFunding',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('funding_source', models.CharField(max_length=255)),[m
[32m+[m[32m                ('stream', models.CharField(max_length=255)),[m
[32m+[m[32m                ('amount_received', models.DecimalField(decimal_places=2, max_digits=10)),[m
[32m+[m[32m                ('date_received', models.DateField()),[m
[32m+[m[32m                ('remaining_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),[m
[32m+[m[32m                ('notes', models.TextField(blank=True, null=True)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/backend/core/models.py b/backend/core/models.py[m
[1mindex 31daa12..16ada77 100644[m
[1m--- a/backend/core/models.py[m
[1m+++ b/backend/core/models.py[m
[36m@@ -1,8 +1,103 @@[m
 from django.db import models[m
 [m
[31m-class SampleModel(models.Model):[m
[32m+[m
[32m+[m[32mclass Family(models.Model):[m
[32m+[m[32m    parent_1_name = models.CharField(max_length=255)[m
[32m+[m[32m    parent_1_phone = models.CharField(max_length=20)[m
[32m+[m[32m    parent_1_email = models.EmailField()[m
[32m+[m[32m    parent_2_name = models.CharField(max_length=255, blank=True, null=True)[m
[32m+[m[32m    parent_2_phone = models.CharField(max_length=20, blank=True, null=True)[m
[32m+[m[32m    parent_2_email = models.EmailField(blank=True, null=True)[m
[32m+[m[32m    address = models.TextField()[m
[32m+[m[32m    payment_preferences = models.CharField(max_length=20, choices=[[m
[32m+[m[32m        ('EFT', 'EFT'),[m
[32m+[m[32m        ('Credit Card', 'Credit Card'),[m
[32m+[m[32m        ('Cash', 'Cash'),[m
[32m+[m[32m        ('Cheque', 'Cheque'),[m
[32m+[m[32m        ('Direct Payment', 'Direct Payment')[m
[32m+[m[32m    ])[m
[32m+[m[32m    notes = models.TextField(blank=True, null=True)[m
[32m+[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return f"Family {self.id}: {self.parent_1_name}"[m
[32m+[m
[32m+[m
[32m+[m[32mclass Child(models.Model):[m
[32m+[m[32m    family = models.ForeignKey(Family, on_delete=models.CASCADE, related_name="children")[m
     name = models.CharField(max_length=255)[m
[31m-    description = models.TextField()[m
[32m+[m[32m    date_of_birth = models.DateField()[m
[32m+[m[32m    allergy_info = models.TextField(blank=True, null=True)[m
[32m+[m[32m    emergency_contact = models.TextField(blank=True, null=True)[m
[32m+[m[32m    start_date = models.DateField()[m
[32m+[m[32m    end_date = models.DateField(blank=True, null=True)[m
[32m+[m[32m    notes = models.TextField(blank=True, null=True)[m
[32m+[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return f"Child {self.id}: {self.name}"[m
[32m+[m
[32m+[m
[32m+[m[32mclass Classroom(models.Model):[m
[32m+[m[32m    name = models.CharField(max_length=255)[m
[32m+[m[32m    capacity = models.IntegerField()[m
 [m
     def __str__(self):[m
         return self.name[m
[32m+[m
[32m+[m
[32m+[m[32mclass Attendance(models.Model):[m
[32m+[m[32m    classroom = models.ForeignKey(Classroom, on_delete=models.CASCADE, related_name="attendances")[m
[32m+[m[32m    date = models.DateField()[m
[32m+[m[32m    max_capacity = models.IntegerField()[m
[32m+[m[32m    enrolled_children = models.IntegerField()[m
[32m+[m[32m    notes = models.TextField(blank=True, null=True)[m
[32m+[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return f"Attendance for {self.classroom.name} on {self.date}"[m
[32m+[m
[32m+[m
[32m+[m[32mclass Payment(models.Model):[m
[32m+[m[32m    family = models.ForeignKey(Family, on_delete=models.CASCADE, related_name="payments")[m
[32m+[m[32m    child = models.ForeignKey(Child, on_delete=models.CASCADE, related_name="payments", blank=True, null=True)[m
[32m+[m[32m    payment_date = models.DateField()[m
[32m+[m[32m    amount_paid = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)[m
[32m+[m[32m    method = models.CharField(max_length=20, choices=[[m
[32m+[m[32m        ('EFT', 'EFT'),[m
[32m+[m[32m        ('Credit Card', 'Credit Card'),[m
[32m+[m[32m        ('Cash', 'Cash'),[m
[32m+[m[32m        ('Cheque', 'Cheque'),[m
[32m+[m[32m        ('Direct Payment', 'Direct Payment')[m
[32m+[m[32m    ])[m
[32m+[m[32m    notes = models.TextField(blank=True, null=True)[m
[32m+[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return f"Payment {self.id} of ${self.amount_paid} by Family {self.family.id}"[m
[32m+[m
[32m+[m
[32m+[m[32mclass Invoice(models.Model):[m
[32m+[m[32m    family = models.ForeignKey(Family, on_delete=models.CASCADE, related_name="invoices")[m
[32m+[m[32m    child = models.ForeignKey(Child, on_delete=models.CASCADE, related_name="invoices", blank=True, null=True)[m
[32m+[m[32m    date_issued = models.DateField()[m
[32m+[m[32m    due_date = models.DateField()[m
[32m+[m[32m    due_amount = models.DecimalField(max_digits=10, decimal_places=2)[m
[32m+[m[32m    subsidy_amount = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)[m
[32m+[m[32m    paid_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.0)[m
[32m+[m[32m    payment_status = models.CharField(max_length=20, choices=[[m
[32m+[m[32m        ('Paid', 'Paid'),[m
[32m+[m[32m        ('Unpaid', 'Unpaid'),[m
[32m+[m[32m        ('Partially Paid', 'Partially Paid'),[m
[32m+[m[32m    ], default='Unpaid')[m
[32m+[m[32m    notes = models.TextField(blank=True, null=True)[m
[32m+[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return f"Invoice {self.id} for Family {self.family.id}"[m
[32m+[m
[32m+[m[32mclass GovernmentFunding(models.Model):[m
[32m+[m[32m    funding_source = models.CharField(max_length=255)[m
[32m+[m[32m    stream = models.CharField(max_length=255)[m
[32m+[m[32m    amount_received = models.DecimalField(max_digits=10, decimal_places=2)[m
[32m+[m[32m    date_received = models.DateField()[m
[32m+[m[32m    remaining_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)[m
[32m+[m[32m    notes = models.TextField(blank=True, null=True)[m
[32m+[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return f"{self.funding_source} - {self.stream}"[m
[1mdiff --git a/backend/core/serializers.py b/backend/core/serializers.py[m
[1mnew file mode 100644[m
[1mindex 0000000..4fad3f8[m
[1m--- /dev/null[m
[1m+++ b/backend/core/serializers.py[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32mfrom rest_framework import serializers[m
[32m+[m[32mfrom core.models import Family, Child, Classroom, Attendance, Payment, Invoice, GovernmentFunding[m
[32m+[m
[32m+[m[32mclass FamilySerializer(serializers.ModelSerializer):[m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        model = Family[m
[32m+[m[32m        fields = '__all__'[m
[32m+[m
[32m+[m[32mclass ChildSerializer(serializers.ModelSerializer):[m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        model = Child[m
[32m+[m[32m        fields = '__all__'[m
[32m+[m
[32m+[m[32mclass ClassroomSerializer(serializers.ModelSerializer):[m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        model = Classroom[m
[32m+[m[32m        fields = '__all__'[m
[32m+[m
[32m+[m[32mclass AttendanceSerializer(serializers.ModelSerializer):[m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        model = Attendance[m
[32m+[m[32m        fields = '__all__'[m
[32m+[m
[32m+[m[32mclass PaymentSerializer(serializers.ModelSerializer):[m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        model = Payment[m
[32m+[m[32m        fields = '__all__'[m
[32m+[m
[32m+[m[32mclass InvoiceSerializer(serializers.ModelSerializer):[m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        model = Invoice[m
[32m+[m[32m        fields = '__all__'[m
[32m+[m
[32m+[m[32mclass GovernmentFundingSerializer(serializers.ModelSerializer):[m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        model = GovernmentFunding[m
[32m+[m[32m        fields = '__all__'[m
[1mdiff --git a/backend/core/urls.py b/backend/core/urls.py[m
[1mindex 51c4148..d8a063b 100644[m
[1m--- a/backend/core/urls.py[m
[1m+++ b/backend/core/urls.py[m
[36m@@ -1,6 +1,34 @@[m
 from django.urls import path[m
[31m-from .views import test_api[m
[32m+[m[32mfrom core.views import ([m
[32m+[m[32m    FamilyListCreateView,[m
[32m+[m[32m    FamilyRetrieveUpdateDestroyView,[m
[32m+[m[32m    ChildListCreateView,[m
[32m+[m[32m    ChildRetrieveUpdateDestroyView,[m
[32m+[m[32m    ClassroomListCreateView,[m
[32m+[m[32m    ClassroomRetrieveUpdateDestroyView,[m
[32m+[m[32m    AttendanceListCreateView,[m
[32m+[m[32m    AttendanceRetrieveUpdateDestroyView,[m
[32m+[m[32m    PaymentListCreateView,[m
[32m+[m[32m    PaymentRetrieveUpdateDestroyView,[m
[32m+[m[32m    InvoiceListCreateView,[m
[32m+[m[32m    InvoiceRetrieveUpdateDestroyView,[m
[32m+[m[32m    GovernmentFundingListCreateView,[m
[32m+[m[32m    GovernmentFundingRetrieveUpdateDestroyView,[m
[32m+[m[32m)[m
 [m
 urlpatterns = [[m
[31m-    path('api/test/', test_api, name='test_api'),[m
[32m+[m[32m    path('api/families/', FamilyListCreateView.as_view(), name='family-list-create'),[m
[32m+[m[32m    path('api/families/<int:pk>/', FamilyRetrieveUpdateDestroyView.as_view(), name='family-detail'),[m
[32m+[m[32m    path('api/children/', ChildListCreateView.as_view(), name='child-list-create'),[m
[32m+[m[32m    path('api/children/<int:pk>/', ChildRetrieveUpdateDestroyView.as_view(), name='child-detail'),[m
[32m+[m[32m    path('api/classrooms/', ClassroomListCreateView.as_view(), name='classroom-list-create'),[m
[32m+[m[32m    path('api/classrooms/<int:pk>/', ClassroomRetrieveUpdateDestroyView.as_view(), name='classroom-detail'),[m
[32m+[m[32m    path('api/attendance/', AttendanceListCreateView.as_view(), name='attendance-list-create'),[m
[32m+[m[32m    path('api/attendance/<int:pk>/', AttendanceRetrieveUpdateDestroyView.as_view(), name='attendance-detail'),[m
[32m+[m[32m    path('api/payments/', PaymentListCreateView.as_view(), name='payment-list-create'),[m
[32m+[m[32m    path('api/payments/<int:pk>/', PaymentRetrieveUpdateDestroyView.as_view(), name='payment-detail'),[m
[32m+[m[32m    path('api/invoices/', InvoiceListCreateView.as_view(), name='invoice-list-create'),[m
[32m+[m[32m    path('api/invoices/<int:pk>/', InvoiceRetrieveUpdateDestroyView.as_view(), name='invoice-detail'),[m
[32m+[m[32m    path('api/government-funding/', GovernmentFundingListCreateView.as_view(), name='government-funding-list-create'),[m
[32m+[m[32m    path('api/government-funding/<int:pk>/', GovernmentFundingRetrieveUpdateDestroyView.as_view(), name='government-funding-detail'),[m
 ][m
[1mdiff --git a/backend/core/views.py b/backend/core/views.py[m
[1mindex 90ebb23..b64e8b6 100644[m
[1m--- a/backend/core/views.py[m
[1m+++ b/backend/core/views.py[m
[36m@@ -1,4 +1,72 @@[m
 from django.http import JsonResponse[m
[32m+[m[32mfrom rest_framework import generics[m
[32m+[m[32mfrom core.models import Family, Child, Classroom, Attendance, Payment, Invoice, GovernmentFunding[m
[32m+[m[32mfrom core.serializers import FamilySerializer, ChildSerializer, ClassroomSerializer, AttendanceSerializer, PaymentSerializer, InvoiceSerializer, GovernmentFundingSerializer[m
 [m
[32m+[m
[32m+[m[32m# Test API Endpoint[m
 def test_api(request):[m
     return JsonResponse({"message": "Hello from the backend!"})[m
[32m+[m
[32m+[m[32m# CRUD views for Family[m
[32m+[m[32mclass FamilyListCreateView(generics.ListCreateAPIView):[m
[32m+[m[32m    queryset = Family.objects.all()[m
[32m+[m[32m    serializer_class = FamilySerializer[m
[32m+[m
[32m+[m[32mclass FamilyRetrieveUpdateDestroyView(generics.RetrieveUpdateDestroyAPIView):[m
[32m+[m[32m    queryset = Family.objects.all()[m
[32m+[m[32m    serializer_class = FamilySerializer[m
[32m+[m
[32m+[m[32m# CRUD views for Child[m
[32m+[m[32mclass ChildListCreateView(generics.ListCreateAPIView):[m
[32m+[m[32m    queryset = Child.objects.all()[m
[32m+[m[32m    serializer_class = ChildSerializer[m
[32m+[m
[32m+[m[32mclass ChildRetrieveUpdateDestroyView(generics.RetrieveUpdateDestroyAPIView):[m
[32m+[m[32m    queryset = Child.objects.all()[m
[32m+[m[32m    serializer_class = ChildSerializer[m
[32m+[m
[32m+[m[32m# CRUD views for Classroom[m
[32m+[m[32mclass ClassroomListCreateView(generics.ListCreateAPIView):[m
[32m+[m[32m    queryset = Classroom.objects.all()[m
[32m+[m[32m    serializer_class = ClassroomSerializer[m
[32m+[m
[32m+[m[32mclass ClassroomRetrieveUpdateDestroyView(generics.RetrieveUpdateDestroyAPIView):[m
[32m+[m[32m    queryset = Classroom.objects.all()[m
[32m+[m[32m    serializer_class = ClassroomSerializer[m
[32m+[m
[32m+[m[32m# CRUD views for Attendance[m
[32m+[m[32mclass AttendanceListCreateView(generics.ListCreateAPIView):[m
[32m+[m[32m    queryset = Attendance.objects.all()[m
[32m+[m[32m    serializer_class = AttendanceSerializer[m
[32m+[m
[32m+[m[32mclass AttendanceRetrieveUpdateDestroyView(generics.RetrieveUpdateDestroyAPIView):[m
[32m+[m[32m    queryset = Attendance.objects.all()[m
[32m+[m[32m    serializer_class = AttendanceSerializer[m
[32m+[m
[32m+[m[32m# CRUD views for Payment[m
[32m+[m[32mclass PaymentListCreateView(generics.ListCreateAPIView):[m
[32m+[m[32m    queryset = Payment.objects.all()[m
[32m+[m[32m    serializer_class = PaymentSerializer[m
[32m+[m
[32m+[m[32mclass PaymentRetrieveUpdateDestroyView(generics.RetrieveUpdateDestroyAPIView):[m
[32m+[m[32m    queryset = Payment.objects.all()[m
[32m+[m[32m    serializer_class = PaymentSerializer[m
[32m+[m
[32m+[m[32m# CRUD views for Invoice[m
[32m+[m[32mclass InvoiceListCreateView(generics.ListCreateAPIView):[m
[32m+[m[32m    queryset = Invoice.objects.all()[m
[32m+[m[32m    serializer_class = InvoiceSerializer[m
[32m+[m
[32m+[m[32mclass InvoiceRetrieveUpdateDestroyView(generics.RetrieveUpdateDestroyAPIView):[m
[32m+[m[32m    queryset = Invoice.objects.all()[m
[32m+[m[32m    serializer_class = InvoiceSerializer[m
[32m+[m
[32m+[m[32m# CRUD views for GovernmentFunding[m
[32m+[m[32mclass GovernmentFundingListCreateView(generics.ListCreateAPIView):[m
[32m+[m[32m    queryset = GovernmentFunding.objects.all()[m
[32m+[m[32m    serializer_class = GovernmentFundingSerializer[m
[32m+[m
[32m+[m[32mclass GovernmentFundingRetrieveUpdateDestroyView(generics.RetrieveUpdateDestroyAPIView):[m
[32m+[m[32m    queryset = GovernmentFunding.objects.all()[m
[32m+[m[32m    serializer_class = GovernmentFundingSerializer[m
[1mdiff --git a/backend/db.sqlite3 b/backend/db.sqlite3[m
[1mdeleted file mode 100644[m
[1mindex 1bae3fe..0000000[m
Binary files a/backend/db.sqlite3 and /dev/null differ
